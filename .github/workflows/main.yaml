# Compare: https://github.com/pangeo-forge/pangeo-forge-recipes/blob/master/.github/workflows/main.yaml

name: Tests

on:
  push:
    branches: 'main'
    paths-ignore:
      - 'docs/**'
  pull_request:
    branches: main
    paths-ignore:
      - 'docs/**'

env:
  PYTEST_ADDOPTS: '--color=yes'

jobs:
  test:
    name: ${{ matrix.python-version }}-${{ matrix.database }}
    runs-on: ubuntu-latest

    # https://docs.github.com/en/actions/using-containerized-services/creating-postgresql-service-containers
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]
        database: ['sqlite', 'postgres']

    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: setup miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: pfo
          python-version: ${{ matrix.python-version }}
          auto-activate-base: false
      - name: install pangeo-forge-orchestrator plus deps
        shell: bash -l {0}
        run: |
          pip install -e '.[dev]'
      - name: print conda env
        shell: bash -l {0}
        run: |
          conda info
          conda list

      - name: Set DATABASE_URL
        shell: bash -l {0}
        run: |
          if [[ "${{ matrix.database }}" == "sqlite" ]]; then \
            echo "DATABASE_URL=sqlite:///${{ github.workspace }}/database.sqlite" >> $GITHUB_ENV; \
          else \
            echo "DATABASE_URL=postgresql://postgres:postgres@postgres:5432/test_db" >> $GITHUB_ENV; \
          fi

      - name: Maybe initialize postgres database
        if: matrix.database == 'postgres'
        shell: bash -l {0}
        run: |
          sudo apt-get update && \
          sudo apt-get install --yes --no-install-recommends postgresql-client && \
          echo "CREATE DATABASE test_db;" | psql --host=${{ env.DATABASE_URL }} && \
          python -m alembic upgrade head

      - name: Run Tests
        shell: bash -l {0}
        run: |
          pytest tests -v --cov=pangeo_forge_orchestrator \
            --cov-config .coveragerc \
            --cov-report term-missing \
            --cov-report xml \
            --durations=10 --durations-min=1.0
      - name: Codecov
        uses: codecov/codecov-action@v2.0.2
        with:
          file: ./coverage.xml
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: false
